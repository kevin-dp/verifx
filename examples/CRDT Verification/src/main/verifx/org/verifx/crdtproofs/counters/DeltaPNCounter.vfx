import org.verifx.crdtproofs.lemmas.DeltaCRDT
import org.verifx.crdtproofs.lemmas.CvRDTProof1
import org.verifx.crdtproofs.counters.DeltaGCounter

class DeltaPNCounter[Identifier](pCounter: DeltaGCounter[Identifier] = new DeltaGCounter[Identifier](),
                                 nCounter: DeltaGCounter[Identifier] = new DeltaGCounter[Identifier]()) extends DeltaCRDT[DeltaPNCounter[Identifier]] {
  def increment(replica: Identifier) =
    new DeltaPNCounter(
      this.pCounter.increment(replica),
      new DeltaGCounter[Identifier]()) // empty GCounter

  def decrement(replica: Identifier) =
    new DeltaPNCounter(
      new DeltaGCounter[Identifier](), // empty GCounter
      this.nCounter.increment(replica))

  def value(allReplicas: Vector[Identifier]) = this.pCounter.value(allReplicas) - this.nCounter.value(allReplicas)

  def merge(delta: DeltaPNCounter[Identifier]) =
    new DeltaPNCounter(
      this.pCounter.merge(delta.pCounter),
      this.nCounter.merge(delta.nCounter))
}

object DeltaPNCounter extends CvRDTProof1[DeltaPNCounter]
