import org.verifx.crdtproofs.delta.DotKernel
import org.verifx.crdtproofs.lemmas.DeltaCRDT
import org.verifx.crdtproofs.lemmas.CvRDTProof2

/*
 * Implementation of an optimized delta state-based Multi-Value Register CRDT.
 * The implementation corresponds to Fig. 3b in Delta CRDT paper and is based on Carlos Baquero's C++ implementation:
 *  https://github.com/CBaquero/delta-enabled-crdts/blob/master/delta-crdts.cc
 */

class DeltaOptimizedMVRegister[V, ID](dk: DotKernel[V, ID] = new DotKernel[V, ID]()) extends DeltaCRDT[DeltaOptimizedMVRegister[V, ID]] {
  def write(value: V, dot: Dot[ID]) = {
    val removedKernel = this.dk.rmvAll()
    val addedKernel = this.dk.add(dot, value)
    new DeltaOptimizedMVRegister(removedKernel.merge(addedKernel))
  }

  def read() =
    this.dk.read()

  def merge(delta: DeltaOptimizedMVRegister[V, ID]) = {
    new DeltaOptimizedMVRegister(this.dk.merge(delta.dk))
  }
}

object DeltaOptimizedMVRegister extends CvRDTProof2[DeltaOptimizedMVRegister]
